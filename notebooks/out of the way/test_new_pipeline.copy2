{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import sys\n",
    "from sklearn.metrics.pairwise import pairwise_distances"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "#temp name change to short from short_names\n",
    "short=['bone','chemo','rad','cpr','hrtman','bpcho','diab_care',\n",
    "                  'diab_edu','dialysis','infus','gene','pict','lab','xray','glass_a','glass_c',\n",
    "                  'eye_a','eye_c','dme','g_tube','hab','home','hospice','pain','osteo',\n",
    "                  'prosth','skill_rn','er','ambu','hosp','inpt','all_inj','all_test','breath',\n",
    "                  'prevent','transplant','l_d','nutr','preg_m','prenat','well_b','depr','ment_off',\n",
    "                  'ment_in','ment_out','not_doc','out_surg','out_ambu','pcp','foot','spec','tele','urgent',\n",
    "                  'back','observ','rehab_out','reconst','pt_rehab','speech','drug_in','drug_out',\n",
    "                  'drug_off','chiro','fit','gym','o2','nutr_counc','tmj','kg_m']\n",
    "# 'PlanId'\n",
    "new_cols = ['Bone Marrow Transplant','Chemotherapy','Radiation',\n",
    "                 'Cardiac and Pulmonary Rehabilitation','Heart Disease Management Program',\n",
    "                 'High Blood Pressure & High Cholesterol Management Program','Diabetes Care Management',\n",
    "                 'Diabetes Education','Dialysis','Infusion Therapy','Genetic Testing Lab Services',\n",
    "                 'Imaging (CT/PET Scans, MRIs)','Laboratory Outpatient and Professional Services',\n",
    "                 'X-rays and Diagnostic Imaging','Eye Glasses for Adults','Eye Glasses for Children',\n",
    "                 'Routine Eye Exam (Adult)','Routine Eye Exam for Children',\n",
    "                 'Durable Medical Equipment','Enteral/Parenteral and Oral Nutrition Therapy',\n",
    "                 'Habilitation Services','Home Health Care Services','Hospice Services',\n",
    "                 'Pain Management Program','Osteoporosis','Prosthetic Devices',\n",
    "                 'Skilled Nursing Facility','Emergency Room Services',\n",
    "                 'Emergency Transportation/Ambulance',\n",
    "                 'Inpatient Hospital Services (e.g., Hospital Stay)',\n",
    "                 'Inpatient Physician and Surgical Services','Allergy Injections',\n",
    "                 'Allergy Testing','Asthma Management Program',\n",
    "                 'Preventive Care/Screening/Immunization','Transplant',\n",
    "                 'Delivery and All Inpatient Services for Maternity Care','Nutrition/Formulas',\n",
    "                 'Pregnancy Management Program','Prenatal and Postnatal Care',\n",
    "                 'Well Baby Visits and Care','Depression Management Program',\n",
    "                 'Mental Health Office Visit','Mental/Behavioral Health Inpatient Services',\n",
    "                 'Mental/Behavioral Health Outpatient Services',\n",
    "                 'Other Practitioner Office Visit (Nurse, Physician Assistant)',\n",
    "                 'Outpatient Facility Fee (e.g., Ambulatory Surgery Center)',\n",
    "                 'Outpatient Surgery Physician/Surgical Services',\n",
    "                 'Primary Care Visit to Treat an Injury or Illness','Routine Foot Care',\n",
    "                 'Specialist Visit','Telehealth','Urgent Care Centers or Facilities',\n",
    "                 'Low Back Pain Management Program','Outpatient Observation',\n",
    "                 'Outpatient Rehabilitation Services','Reconstructive Surgery',\n",
    "                 'Rehabilitative Occupational and Rehabilitative Physical Therapy',\n",
    "                 'Rehabilitative Speech Therapy','Substance Abuse Disorder Inpatient Services',\n",
    "                 'Substance Abuse Disorder Outpatient Services','Substance Abuse Office Visit',\n",
    "                 'Chiropractic Care','Fitness Center Membership','Gym Access',\n",
    "                 'Hyperbaric Oxygen Therapy','Nutritional Counseling',\n",
    "                 'Treatment for Temporomandibular Joint Disorders',\n",
    "                 'Weight Loss Management Program']\n",
    "\n",
    "rename_d = dict(zip(new_cols,short))\n",
    "\n",
    "def make_plan_matrix():\n",
    "    '''\n",
    "        imports needed the plan detail files, merges them, reorders to match \n",
    "        the flask app, then outputs two versions. \n",
    "\n",
    "            plans_matrix_df is kept with the index and column names so it \n",
    "            can be referred back to provide the plan names.\n",
    "\n",
    "            plans_matrix is transformed to a matrix for actual calculations.\n",
    "\n",
    "    '''\n",
    "\n",
    "    attr = pd.read_csv('../data/clean_files/attr_FL.csv')\n",
    "    ben = pd.read_csv('../data/clean_files/benefits_covered_FL.csv')\n",
    "\n",
    "    #attr.drop(['Unnamed: 0','Issuer_ID'], axis=1, inplace=True)\n",
    "    #attr.drop(['Issuer_Denial_rate','Plan_denial_rate','Disenrollment_Rate'], axis=1, inplace=True)\n",
    "\n",
    "\n",
    "    #attr=attr.sort_values(by=['IssuerId', 'ServiceAreaId'])\n",
    "    merged_ben_attr = ben.merge(attr, how='left', on='PlanId')\n",
    "    merge_clean= merged_ben_attr.dropna()\n",
    "    merge_clean['Osteo']= merge_clean['Osteoporosis']+merge_clean['Osteoporosis Treatment']#     merge_clean3=merge_clean.drop(['Osteoporosis','Osteoporosis Treatment','StandardComponentId','IssuerId','NetworkId',\n",
    "#                                    'ServiceAreaId','PlanType','MetalLevel','PlanVariantMarketingName','Issuer_Name',\n",
    "#                                    'No Management Program'],axis=1)\n",
    "    merge_clean3=merge_clean.drop(['Osteoporosis','Osteoporosis Treatment','PlanType','MetalLevel',\n",
    "                                  'PlanVariantMarketingName'],axis=1)\n",
    "\n",
    "    merge_clean3.rename(columns={'Osteo':'Osteoporosis'}, inplace=True)\n",
    "    '''\n",
    "        this will replace features - exclusions are misbehaving so they have\n",
    "        been commented out of flask\n",
    "\n",
    "        new_cols_all = ['PlanId','Bone Marrow Transplant','Chemotherapy','Radiation',\n",
    "        'Cardiac and Pulmonary Rehabilitation','Heart Disease Management Program',\n",
    "        'High Blood Pressure & High Cholesterol Management Program','Diabetes Care Management',\n",
    "        'Diabetes Education','Dialysis','Infusion Therapy','Genetic Testing Lab Services',\n",
    "        'Imaging (CT/PET Scans, MRIs)','Laboratory Outpatient and Professional Services',\n",
    "        'X-rays and Diagnostic Imaging','Eye Glasses for Adults','Eye Glasses for Children',\n",
    "        'Routine Eye Exam (Adult)','Routine Eye Exam for Children',\n",
    "        'Durable Medical Equipment','Enteral/Parenteral and Oral Nutrition Therapy',\n",
    "        'Habilitation Services','THIS IS WHERE HEARING AIDS GOES',\n",
    "        'Home Health Care Services','Hospice Services',\n",
    "        'THIS IS WHERE LONG TERM NURSING GOES','Pain Management Program','THIS IS WHERE PRIVATE NURSE GOES',\n",
    "        'Osteoporosis','Prosthetic Devices','Skilled Nursing Facility',\n",
    "        'Emergency Room Services','Emergency Transportation/Ambulance',\n",
    "        'Inpatient Hospital Services (e.g., Hospital Stay)','Inpatient Physician and Surgical Services',\n",
    "        'Allergy Injections','Allergy Testing','Asthma Management Program',\n",
    "        'Preventive Care/Screening/Immunization','Transplant','ABORTION GOES HERE',\n",
    "        'Delivery and All Inpatient Services for Maternity Care','INFERTILITY GOES HERE',\n",
    "        'NEWBORN HEARING GOES HERE', 'NEWBORN OTHER GOES HERE','Nutrition/Formulas',\n",
    "        'Pregnancy Management Program','Prenatal and Postnatal Care',\n",
    "        'Well Baby Visits and Care','Depression Management Program',\n",
    "        'Mental Health Office Visit','Mental/Behavioral Health Inpatient Services',\n",
    "        'Mental/Behavioral Health Outpatient Services', 'MENTAL HEALTH OTHER GOES HERE',\n",
    "        'Other Practitioner Office Visit (Nurse, Physician Assistant)',\n",
    "        'Outpatient Facility Fee (e.g., Ambulatory Surgery Center)',\n",
    "        'Outpatient Surgery Physician/Surgical Services',\n",
    "        'Primary Care Visit to Treat an Injury or Illness','Routine Foot Care',\n",
    "        'Specialist Visit','Telehealth','Urgent Care Centers or Facilities',\n",
    "        'Low Back Pain Management Program','Outpatient Observation',\n",
    "        'Outpatient Rehabilitation Services','Reconstructive Surgery',\n",
    "        'Rehabilitative Occupational and Rehabilitative Physical Therapy',\n",
    "        'Rehabilitative Speech Therapy','Substance Abuse Disorder Inpatient Services',\n",
    "        'Substance Abuse Disorder Outpatient Services','Substance Abuse Office Visit',\n",
    "        'ACUPUNCTURE GOES HERE','BARIATRIC GOES HERE','Chiropractic Care','COSMETIC GOES HERE',\n",
    "        'Fitness Center Membership','Gym Access','Hyperbaric Oxygen Therapy','Nutritional Counseling',\n",
    "        'Treatment for Temporomandibular Joint Disorders','Weight Loss Management Program']\n",
    "    '''\n",
    "    features= ['PlanId','Bone Marrow Transplant','Chemotherapy','Radiation',\n",
    "               'Cardiac and Pulmonary Rehabilitation','Heart Disease Management Program',\n",
    "               'High Blood Pressure & High Cholesterol Management Program','Diabetes Care Management',\n",
    "               'Diabetes Education','Dialysis','Infusion Therapy','Genetic Testing Lab Services',\n",
    "               'Imaging (CT/PET Scans, MRIs)','Laboratory Outpatient and Professional Services',\n",
    "               'X-rays and Diagnostic Imaging','Eye Glasses for Adults','Eye Glasses for Children',\n",
    "               'Routine Eye Exam (Adult)','Routine Eye Exam for Children',\n",
    "               'Durable Medical Equipment','Enteral/Parenteral and Oral Nutrition Therapy',\n",
    "               'Habilitation Services','Home Health Care Services','Hospice Services',\n",
    "               'Pain Management Program','Osteoporosis','Prosthetic Devices',\n",
    "               'Skilled Nursing Facility','Emergency Room Services',\n",
    "               'Emergency Transportation/Ambulance',\n",
    "               'Inpatient Hospital Services (e.g., Hospital Stay)',\n",
    "               'Inpatient Physician and Surgical Services','Allergy Injections',\n",
    "               'Allergy Testing','Asthma Management Program',\n",
    "               'Preventive Care/Screening/Immunization','Transplant',\n",
    "               'Delivery and All Inpatient Services for Maternity Care','Nutrition/Formulas',\n",
    "               'Pregnancy Management Program','Prenatal and Postnatal Care',\n",
    "               'Well Baby Visits and Care','Depression Management Program',\n",
    "               'Mental Health Office Visit','Mental/Behavioral Health Inpatient Services',\n",
    "               'Mental/Behavioral Health Outpatient Services',\n",
    "               'Other Practitioner Office Visit (Nurse, Physician Assistant)',\n",
    "               'Outpatient Facility Fee (e.g., Ambulatory Surgery Center)',\n",
    "               'Outpatient Surgery Physician/Surgical Services',\n",
    "               'Primary Care Visit to Treat an Injury or Illness','Routine Foot Care',\n",
    "               'Specialist Visit','Telehealth','Urgent Care Centers or Facilities',\n",
    "               'Low Back Pain Management Program','Outpatient Observation',\n",
    "               'Outpatient Rehabilitation Services','Reconstructive Surgery',\n",
    "               'Rehabilitative Occupational and Rehabilitative Physical Therapy',\n",
    "               'Rehabilitative Speech Therapy','Substance Abuse Disorder Inpatient Services',\n",
    "               'Substance Abuse Disorder Outpatient Services','Substance Abuse Office Visit',\n",
    "               'Chiropractic Care','Fitness Center Membership','Gym Access',\n",
    "               'Hyperbaric Oxygen Therapy','Nutritional Counseling',\n",
    "               'Treatment for Temporomandibular Joint Disorders',\n",
    "               'Weight Loss Management Program']\n",
    "    plans_matrix_df= merge_clean3[features]\n",
    "    plans_matrix_df['IssuerId']=plans_matrix_df['PlanId'].str.slice(stop=5)\n",
    "    #plans_matrix_df.set_index('PlanId')\n",
    "    \n",
    "    plans_matrix_df.drop('PlanId',axis=1, inplace=True)\n",
    "    plans_matrix_df=plans_matrix_df.astype(int)\n",
    "    plans=plans_matrix_df['IssuerId']\n",
    "\n",
    "   \n",
    "    return (plans_matrix_df,plans)\n",
    "            \n",
    "def new_customer(short_names):\n",
    "    customer_dict={}\n",
    "    #print(len(short_names),'short',short_names)\n",
    "    for short_name in short_names:\n",
    "        customer_dict[short_name]=-1\n",
    "   # print('cust_dict',customer_dict.keys())\n",
    "    return customer_dict\n",
    "\n",
    "\n",
    "def make_customer_row(customer_dict,customer_choices):\n",
    "    for benefit in customer_choices:\n",
    "        if benefit in customer_dict.keys():\n",
    "             customer_dict[benefit]=1\n",
    "                \n",
    "    print(len(customer_dict.keys()),'cust_dict',customer_dict.keys())        \n",
    "    return customer_dict\n",
    "\n",
    "\n",
    "def benefit_dict(short_names,features):\n",
    "    benefit_dict= dict(zip(short_names, features))\n",
    "    #print (len(benefit_dict.keys()),'ben__dict',benefit_dict.keys())\n",
    "    return benefit_dict\n",
    "\n",
    "def jaccard(plans_matrix,customer_dict):\n",
    "    a=list(plans_matrix.columns)\n",
    "    \n",
    "    z=list(customer_dict.keys())\n",
    "    li_dif = [i for i in a + z if i not in z or i not in a] \n",
    "    print(li_dif)\n",
    "    print(plans_matrix.columns)\n",
    "    print(len(a), len(z))\n",
    "    print(customer_dict.keys())\n",
    "    \n",
    "    jaccard_matrix = plans_matrix.append(customer_dict, ignore_index=True)\n",
    "    jaccard_array= jaccard_matrix.to_numpy()\n",
    "    #print(jaccard_array)\n",
    "    #print(jaccard_matrix.head())\n",
    "    jaccard_calc = 1 - pairwise_distances(jaccard_array, metric = \"hamming\")\n",
    "    #jaccard_similarity = pd.DataFrame(jaccard_calc, index=plans_matrix.index, columns=plans_matrix.index)\n",
    "    jaccard_similarity = pd.DataFrame(jaccard_calc)\n",
    "    print(jaccard_similarity.info())\n",
    "\n",
    "    match = jaccard_similarity.iloc[[-1]]\n",
    "   \n",
    "    return jaccard_similarity\n",
    "\n",
    "\n",
    "def narrow_plans():\n",
    "    zip=zip\n",
    "\n",
    "    pass\n",
    "\n",
    "def analysis(listx,renamed):\n",
    "    \n",
    "    customer_choices=listx\n",
    "    matrix,plans = make_plan_matrix()\n",
    "    matrix = matrix.rename(columns=renamed)\n",
    "    b=new_customer(short)\n",
    "    c=make_customer_row(b,customer_choices)\n",
    "    d=benefit_dict(short,new_cols)\n",
    "    \n",
    "    e=jaccard(matrix,c)\n",
    "    return e,plans\n",
    "#     print ('Howdy')\n",
    "#     return (1+2)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "30\n",
      "69 cust_dict dict_keys(['bone', 'chemo', 'rad', 'cpr', 'hrtman', 'bpcho', 'diab_care', 'diab_edu', 'dialysis', 'infus', 'gene', 'pict', 'lab', 'xray', 'glass_a', 'glass_c', 'eye_a', 'eye_c', 'dme', 'g_tube', 'hab', 'home', 'hospice', 'pain', 'osteo', 'prosth', 'skill_rn', 'er', 'ambu', 'hosp', 'inpt', 'all_inj', 'all_test', 'breath', 'prevent', 'transplant', 'l_d', 'nutr', 'preg_m', 'prenat', 'well_b', 'depr', 'ment_off', 'ment_in', 'ment_out', 'not_doc', 'out_surg', 'out_ambu', 'pcp', 'foot', 'spec', 'tele', 'urgent', 'back', 'observ', 'rehab_out', 'reconst', 'pt_rehab', 'speech', 'drug_in', 'drug_out', 'drug_off', 'chiro', 'fit', 'gym', 'o2', 'nutr_counc', 'tmj', 'kg_m'])\n",
      "[]\n",
      "Index(['bone', 'chemo', 'rad', 'cpr', 'hrtman', 'bpcho', 'diab_care',\n",
      "       'diab_edu', 'dialysis', 'infus', 'gene', 'pict', 'lab', 'xray',\n",
      "       'glass_a', 'glass_c', 'eye_a', 'eye_c', 'dme', 'g_tube', 'hab', 'home',\n",
      "       'hospice', 'pain', 'osteo', 'prosth', 'skill_rn', 'er', 'ambu', 'hosp',\n",
      "       'inpt', 'all_inj', 'all_test', 'breath', 'prevent', 'transplant', 'l_d',\n",
      "       'nutr', 'preg_m', 'prenat', 'well_b', 'depr', 'ment_off', 'ment_in',\n",
      "       'ment_out', 'not_doc', 'out_surg', 'out_ambu', 'pcp', 'foot', 'spec',\n",
      "       'tele', 'urgent', 'back', 'observ', 'rehab_out', 'reconst', 'pt_rehab',\n",
      "       'speech', 'drug_in', 'drug_out', 'drug_off', 'chiro', 'fit', 'gym',\n",
      "       'o2', 'nutr_counc', 'tmj', 'kg_m'],\n",
      "      dtype='object')\n",
      "69 69\n",
      "dict_keys(['bone', 'chemo', 'rad', 'cpr', 'hrtman', 'bpcho', 'diab_care', 'diab_edu', 'dialysis', 'infus', 'gene', 'pict', 'lab', 'xray', 'glass_a', 'glass_c', 'eye_a', 'eye_c', 'dme', 'g_tube', 'hab', 'home', 'hospice', 'pain', 'osteo', 'prosth', 'skill_rn', 'er', 'ambu', 'hosp', 'inpt', 'all_inj', 'all_test', 'breath', 'prevent', 'transplant', 'l_d', 'nutr', 'preg_m', 'prenat', 'well_b', 'depr', 'ment_off', 'ment_in', 'ment_out', 'not_doc', 'out_surg', 'out_ambu', 'pcp', 'foot', 'spec', 'tele', 'urgent', 'back', 'observ', 'rehab_out', 'reconst', 'pt_rehab', 'speech', 'drug_in', 'drug_out', 'drug_off', 'chiro', 'fit', 'gym', 'o2', 'nutr_counc', 'tmj', 'kg_m'])\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 951 entries, 0 to 950\n",
      "Columns: 951 entries, 0 to 950\n",
      "dtypes: float64(951)\n",
      "memory usage: 6.9 MB\n",
      "None\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 951 entries, 0 to 950\n",
      "Columns: 950 entries, 12379FL0010001-01 to 56503FL2730001-03\n",
      "dtypes: float64(950)\n",
      "memory usage: 6.9 MB\n"
     ]
    }
   ],
   "source": [
    "example=['infus','gene','pict','lab','xray','glass_a','glass_c','eye_a','eye_c','dme','g_tube','hab','home','hosp','pain','osteo','osteo',\n",
    "         'prosth','skill_rn','er','ambu','hosp','inpt','all_inj','all_test','breath','prevent','transplant',\n",
    "         'l_d','nutr']\n",
    "print(len(example))\n",
    "df,names=analysis(example,rename_d)\n",
    "\n",
    "df=df.drop(950, axis=1)\n",
    "match = df.iloc[[-1]]\n",
    "#print(df,names)\n",
    "\n",
    "df.columns=names\n",
    "#df\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sum(len(df)-df.count())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([0.26086957, 0.27536232, 0.28985507, 0.30434783, 0.31884058,\n",
       "        0.33333333, 0.34782609]), array([ 50,  25, 240,   7, 163, 239, 226]))"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# sort eigenvalue in decreasing order\n",
    "idx = np.argsort(match.values)[0]\n",
    "\n",
    "plans = names[idx]\n",
    "    # sort eigenvectors according to same indeplqnw\n",
    "plans[946:]\n",
    "match[idx]\n",
    "np.unique(match.values,return_counts=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "attr = pd.read_csv('../data/clean_files/attr_FL.csv')\n",
    "ben = pd.read_csv('../data/clean_files/benefits_covered_FL.csv')\n",
    "\n",
    "#attr.drop(['Unnamed: 0','Issuer_ID'], axis=1, inplace=True)\n",
    "#attr.drop(['Issuer_Denial_rate','Plan_denial_rate','Disenrollment_Rate'], axis=1, inplace=True)\n",
    "\n",
    "\n",
    "attr=attr.sort_values(by=[ServiceAreaId'])\n",
    "merged_ben_attr = ben.merge(attr, how='left', on='PlanId')\n",
    "merge_clean= merged_ben_attr.dropna()\n",
    "merge_clean['Osteo']= merge_clean['Osteoporosis']+merge_clean['Osteoporosis Treatment']\n",
    "\n",
    "merge_clean3=merge_clean.drop(['Osteoporosis','Osteoporosis Treatment','StandardComponentId','IssuerId','NetworkId',\n",
    "                                   'ServiceAreaId','PlanType','MetalLevel','PlanVariantMarketingName','Issuer_Name',\n",
    "                                   'No Management Program'],axis=1)\n",
    "\n",
    "merge_clean3.rename(columns={'Osteo':'Osteoporosis'}, inplace=True)"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "features= ['PlanId','Bone Marrow Transplant','Chemotherapy','Radiation',\n",
    "                 'Cardiac and Pulmonary Rehabilitation','Heart Disease Management Program',\n",
    "                 'High Blood Pressure & High Cholesterol Management Program','Diabetes Care Management',\n",
    "                 'Diabetes Education','Dialysis','Infusion Therapy','Genetic Testing Lab Services',\n",
    "                 'Imaging (CT/PET Scans, MRIs)','Laboratory Outpatient and Professional Services',\n",
    "                 'X-rays and Diagnostic Imaging','Eye Glasses for Adults','Eye Glasses for Children',\n",
    "                 'Routine Eye Exam (Adult)','Routine Eye Exam for Children',\n",
    "                 'Durable Medical Equipment','Enteral/Parenteral and Oral Nutrition Therapy',\n",
    "                 'Habilitation Services','Home Health Care Services','Hospice Services',\n",
    "                 'Pain Management Program','Osteoporosis','Prosthetic Devices',\n",
    "                 'Skilled Nursing Facility','Emergency Room Services',\n",
    "                 'Emergency Transportation/Ambulance',\n",
    "                 'Inpatient Hospital Services (e.g., Hospital Stay)',\n",
    "                 'Inpatient Physician and Surgical Services','Allergy Injections',\n",
    "                 'Allergy Testing','Asthma Management Program',\n",
    "                 'Preventive Care/Screening/Immunization','Transplant',\n",
    "                 'Delivery and All Inpatient Services for Maternity Care','Nutrition/Formulas',\n",
    "                 'Pregnancy Management Program','Prenatal and Postnatal Care',\n",
    "                 'Well Baby Visits and Care','Depression Management Program',\n",
    "                 'Mental Health Office Visit','Mental/Behavioral Health Inpatient Services',\n",
    "                 'Mental/Behavioral Health Outpatient Services',\n",
    "                 'Other Practitioner Office Visit (Nurse, Physician Assistant)',\n",
    "                 'Outpatient Facility Fee (e.g., Ambulatory Surgery Center)',\n",
    "                 'Outpatient Surgery Physician/Surgical Services',\n",
    "                 'Primary Care Visit to Treat an Injury or Illness','Routine Foot Care',\n",
    "                 'Specialist Visit','Telehealth','Urgent Care Centers or Facilities',\n",
    "                 'Low Back Pain Management Program','Outpatient Observation',\n",
    "                 'Outpatient Rehabilitation Services','Reconstructive Surgery',\n",
    "                 'Rehabilitative Occupational and Rehabilitative Physical Therapy',\n",
    "                 'Rehabilitative Speech Therapy','Substance Abuse Disorder Inpatient Services',\n",
    "                 'Substance Abuse Disorder Outpatient Services','Substance Abuse Office Visit',\n",
    "                 'Chiropractic Care','Fitness Center Membership','Gym Access',\n",
    "                 'Hyperbaric Oxygen Therapy','Nutritional Counseling',\n",
    "                 'Treatment for Temporomandibular Joint Disorders',\n",
    "                 'Weight Loss Management Program']\n",
    "plans_matrix_df= merge_clean3[features]\n",
    "\n",
    "plans_matrix_df.set_index('PlanId')\n",
    "plans_matrix_df.drop('PlanId',axis=1, inplace=True)\n",
    "plans_matrix_df=plans_matrix_df.astype(int)\n",
    "print(len(features))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "a=['bone', 'chemo', 'rad', 'cpr', 'hrtman', 'bpcho', 'diab_care', 'diab_edu', 'dialysis', 'infus', 'gene', 'pict', 'lab', 'xray', 'glass_a', 'glass_c', 'eye_a', 'eye_c', 'dme', 'g_tube', 'hab', 'home', 'hospice', 'pain', 'osteo', 'prosth', 'skill_rn', 'er', 'ambu', 'hosp', 'inpt', 'all_inj', 'all_test', 'breath', 'prevent', 'transplant', 'l_d', 'nutr', 'preg_m', 'prenat', 'well_b', 'depr', 'ment_off', 'ment_in', 'ment_out', 'not_doc', 'out_surg', 'pcp', 'foot', 'spec', 'tele', 'urgent', 'back', 'observ', 'rehab_out', 'reconst', 'pt_rehab', 'speech', 'drug_in', 'drug_out', 'drug_off', 'chiro', 'fit', 'gym', 'o2', 'nutr_counc', 'tmj', 'kg_m']\n",
    "z=['bone', 'chemo', 'rad', 'cpr', 'hrtman', 'bpcho', 'diab_care', 'diab_edu', 'dialysis', 'infus', 'gene', 'pict', 'lab', 'xray', 'glass_a', 'glass_c', 'eye_a', 'eye_c', 'dme', 'g_tube', 'hab', 'home', 'hospice', 'pain', 'osteo', 'prosth', 'skill_rn', 'er', 'ambu', 'hosp', 'inpt', 'all_inj', 'all_test', 'breath', 'prevent', 'transplant', 'l_d', 'nutr', 'preg_m', 'prenat', 'well_b', 'depr', 'ment_off', 'ment_in', 'ment_out', 'not_doc', 'out_surg', 'pcp', 'foot', 'spec', 'tele', 'urgent', 'back', 'observ', 'rehab_out', 'reconst', 'pt_rehab', 'speech', 'drug_in', 'drug_out', 'drug_off', 'chiro', 'fit', 'gym', 'o2', 'nutr_counc', 'tmj', 'kg_m']\n",
    "li_dif = [i for i in a + z if i not in z or i not in a] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 996 entries, 0 to 995\n",
      "Data columns (total 24 columns):\n",
      "Unnamed: 0                                                   996 non-null int64\n",
      "StandardComponentId                                          996 non-null object\n",
      "PlanId                                                       996 non-null object\n",
      "IssuerId                                                     996 non-null int64\n",
      "NetworkId                                                    996 non-null object\n",
      "ServiceAreaId                                                996 non-null object\n",
      "PlanType                                                     996 non-null object\n",
      "MetalLevel                                                   996 non-null object\n",
      "PlanVariantMarketingName                                     996 non-null object\n",
      "Asthma Management Program                                    996 non-null int64\n",
      "Depression Management Program                                996 non-null int64\n",
      "Diabetes Management Program                                  996 non-null int64\n",
      "Heart Disease Management Program                             996 non-null int64\n",
      "High Blood Pressure & High Cholesterol Management Program    996 non-null int64\n",
      "Low Back Pain Management Program                             996 non-null int64\n",
      "No Management Program                                        996 non-null int64\n",
      "Pain Management Program                                      996 non-null int64\n",
      "Pregnancy Management Program                                 996 non-null int64\n",
      "Weight Loss Management Program                               996 non-null int64\n",
      "Issuer_Name                                                  996 non-null object\n",
      "Issuer_ID                                                    996 non-null float64\n",
      "Issuer_Denial_rate                                           996 non-null object\n",
      "Plan_denial_rate                                             996 non-null object\n",
      "Disenrollment_Rate                                           996 non-null object\n",
      "dtypes: float64(1), int64(12), object(11)\n",
      "memory usage: 186.8+ KB\n"
     ]
    }
   ],
   "source": [
    "\n",
    "attr = pd.read_csv('../data/clean_files/attr_FL.csv')\n",
    "ben = pd.read_csv('../data/clean_files/benefits_covered_FL.csv')\n",
    "attr.info()\n",
    "#attr.drop(['Unnamed: 0','Issuer_ID'], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
